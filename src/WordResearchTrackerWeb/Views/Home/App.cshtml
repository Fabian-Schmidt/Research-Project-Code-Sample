@using Newtonsoft.Json
@model WordResearchTrackerWeb.Models.ViewModel

@{
    ViewBag.Title = "Research Tracker";
}

<!-- Project List -->
<div class="row">
    <div class="col-sm-12">
        <div class="panel-purple">
            <div class="panel-heading">
                <h1>
                    <img src="~/Images/rtracker.png" width="32" height="32" class="icon-image" />
                    <span class="verticalAlign">Research Projects</span>
                </h1>
            </div>
            <div class="panel-body">
                <div class="select-project">
                    <select data-bind="options: projects, optionsValue: 'id', optionsText: 'title', value: selectedProjectId"></select>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Busy indicator-->
<div id="busyRow" class="row" data-bind="visible: showLoader">
    <div id="loading">
        <div class="col-sm-12">
            <img src="~/Images/PROGRESS.GIF" id="loading-image" />
        </div>
    </div>
</div>

<!-- Reference Links-->
<div class="row">
    <div class="col-sm-12">
        <div class="panel-purple">
            <div class="panel-heading">
                <h1>
                    <img src="~/Images/Link.png" width="32" height="32" class="icon-image" />
                    <span class="verticalAlign">Links</span>
                </h1>
                <div>
                    <span class="links-counter">
                        <span data-bind="text: numberOfSelectedReferences"></span> of <span data-bind="text: numberOfAvailableReferences"></span>
                    </span>
                    <span class="arrow-container">
                        <div class="down-arrow" data-bind="click: toggleReferences"></div>
                    </span>
                </div>
            </div>
            <div class="panel-body">
                <div data-bind="if: references().length > 0">
                    <ul class="link-selector collapse in" id="referenceLinks" data-bind="foreach: references">
                        <li class="link" data-bind="click: $parent.toggleSelectedReference, css: {selected: isSelected() === true}">
                            <h2 data-bind="text: title"></h2>
                            <span class="project-link" data-bind="text: url, attr: {title: url}"></span>
                        </li>
                    </ul>
                </div>
                <div data-bind="if: references().length == 0">No links available</div>

            </div>
        </div>
    </div>
</div>
<!-- Add to document -->
<div class="row">
    <div class="col-sm-12">
        <button id="insertRefs" type="submit" class="btn btn-purple" data-bind="enable: enableInsertButton, click: insertTable">
            Insert
        </button>
    </div>
</div>

@section scripts {
    <script type="text/javascript">

        (function() {
            "use strict";
            Office.initialize = function(reason) {
                (function() {
                    "use strict";

                    jQuery(function() {

                        var referenceModel = function(reference) {
                            var self = this;
                            self.id = reference.Id;
                            self.title = reference.Title;
                            self.url = reference.Url;
                            self.notes = reference.Notes;
                            self.project = reference.Project;
                            self.isSelected = ko.observable(false);
                        };

                        var projectModel = function(project) {
                            var self = this;
                            self.id = project.Id;
                            self.title = project.Title;
                        }


                        var projects = $.parseJSON('@Html.Raw(JsonConvert.SerializeObject(Model.Projects))');
                        var projectModels = $.map(projects, function(project) {
                            return new projectModel(project);
                        });


                        var viewModel = function() {
                            var self = this;
                            self.showLoader = ko.observable(false);
                            self.projects = ko.observableArray(projectModels);
                            self.selectedProjectId = ko.observable();
                            self.selectedProjectId.subscribe(function(newValue) {

                                if (newValue < 0) {
                                    self.references([]);
                                    self.selectedReferences([]);
                                    return;
                                }
                                self.showLoader(true);
                                $.ajax({
                                    url: "/Home/GetReferences?projectName=" + newValue,
                                    method: 'get',
                                    cache: false,
                                    success: function(data) {
                                        var referenceModels = $.map(data, function(reference) {
                                            return new referenceModel(reference);
                                        });
                                        self.references(referenceModels);
                                        self.showLoader(false);
                                    }
                                });
                            });


                            self.references = ko.observableArray([]);
                            self.selectedReferences = ko.observableArray();

                            self.toggleSelectedReference = function(reference) {
                                reference.isSelected(!reference.isSelected());
                                if (reference.isSelected()) {
                                    self.selectedReferences.push(reference);
                                } else {
                                    self.selectedReferences.remove(reference);
                                }
                            };

                            self.numberOfAvailableReferences = ko.computed(function() {
                                return self.references().length;
                            });
                            self.numberOfSelectedReferences = ko.computed(function() {
                                return self.selectedReferences().length;
                            });

                            self.enableInsertButton = ko.computed(function() {
                                return self.selectedReferences().length > 0;
                            });

                            self.toggleReferences = function(vm, event) {
                                if (self.references().length > 0) {
                                    if ($(event.currentTarget).hasClass('down-arrow')) {
                                        $(event.currentTarget).removeClass('down-arrow').addClass('left-arrow');
                                        $("#referenceLinks").css('display', 'none');
                                    } else {
                                        $(event.currentTarget).removeClass('left-arrow').addClass('down-arrow');
                                        $("#referenceLinks").css('display', 'block');
                                    }
                                }
                            }

                            self.insertTable = function() {
                                self.showLoader(true);
                                var projectId = self.selectedProjectId();
                                var project = ko.utils.arrayFirst(self.projects(), function(p) {
                                    return p.id == projectId;
                                });
                                var tableHtml =
                                    "<table style='font-family:Segoe UI'>" +
                                        "<thead>" +
                                        "<tr style='background-color:#545454;color:white;text-transform:uppercase;text-align:left;vertical-align:middle;'><th colspan='2'>" + project.title + "</th></tr>" +
                                        "<tr style='background-color:#78228F;color:white;text-align:left;'><th>Title</th><th>Link</th></tr>" +
                                        "</thead>" +
                                        "<tbody>";

                                ko.utils.arrayForEach(this.selectedReferences(), function(reference) {
                                    tableHtml += "<tr  style='background-color:#F0F0F0'>" + "<td style='padding:2px;'>" + reference.title + "</td>" + "<td style='padding:2px;'><a href='" + reference.url + "'>" + reference.url + "</a></td></tr>";
                                });

                                tableHtml += "</tbody></table>";


                                Office.context.document.setSelectedDataAsync(tableHtml, { coercionType: "html" }, function(result) {
                                        var error = result.error;
                                        if (result.status === "failed") {
                                            toastr.error(error.message);
                                        }
                                        self.showLoader(false);
                                    }
                                );
                            };
                        };


                        ko.applyBindings(new viewModel());

                        //insert links button
                        //$("#insertRefs").click(function() {

                        //    var tableData = $('#referencesTable tbody tr.selected').map(function() {
                        //        var $row = $(this);
                        //        return {
                        //            url: $row.find(':nth-child(2)').find(':nth-child(1)').text(),
                        //            notes: $row.find(':nth-child(3)').text()
                        //        };
                        //    }).get();

                        //    var tableHtml =
                        //        "<table style='font-family:Segoe UI'>" +
                        //            "<caption style='background-color:#283E75;color:white'>" + $("#projectName").find('option:selected').text() + "</caption>" +
                        //            "<thead style='background-color:#283E75;color:white'>" +
                        //            "<tr><th>Reference</th><th>Notes</th></tr>" +
                        //            "</thead>" +
                        //            "<tbody>";

                        //    for (var i = 0; i < tableData.length; i++) {
                        //        tableHtml +=
                        //            "<tr><td><a href='" + tableData[i].url + "'>" + tableData[i].url + "</a></td>" +
                        //            "<td>" + tableData[i].notes + "</td></tr>";
                        //    }

                        //    tableHtml += "</tbody></table>";


                        //    Office.context.document.setSelectedDataAsync(tableHtml, { coercionType: "html" },function(result) {
                        //            var error = result.error;
                        //            if (result.status === "failed") {
                        //                toastr.error(error.message);
                        //            }
                        //        }
                        //    );
                        //});
                    });
                }());
            };
        }());
    </script>
}




